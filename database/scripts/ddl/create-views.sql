-- QUARTO E SEU TIPO
CREATE VIEW IF NOT EXISTS VW_QUARTO_TIPO_QUARTO AS
SELECT  T1.ID_QUARTO,
		T1.NU_QUARTO,
		T1.ID_TIPO_QUARTO ID_TIPO_QUARTO,
        T2.NO_TIPO_QUARTO,
        T2.VL_DIARIA
FROM QUARTO T1
LEFT JOIN TIPO_QUARTO T2 ON T1.ID_TIPO_QUARTO = T2.ID_TIPO_QUARTO;

-- QUARTO INDISPONIVEL E SEU TIPO
CREATE VIEW IF NOT EXISTS VW_QUARTO_INDISPONIVEL AS
SELECT 	T2.*,
		T3.NO_TIPO_QUARTO,
		T3.VL_DIARIA
FROM HOSPEDAGEM T1
LEFT JOIN QUARTO T2 ON T1.ID_QUARTO = T2.ID_QUARTO
LEFT JOIN TIPO_QUARTO T3 ON T2.ID_TIPO_QUARTO = T3.ID_TIPO_QUARTO
WHERE T1.IN_ATIVO = 1;

-- QUARTO DISPONIVEL E SEU TIPO
CREATE VIEW IF NOT EXISTS VW_QUARTO_DISPONIVEL AS
SELECT 	T1.*,
		T3.NO_TIPO_QUARTO,
		T3.VL_DIARIA
FROM QUARTO T1
LEFT JOIN VW_QUARTO_INDISPONIVEL T2 ON T1.ID_QUARTO = T2.ID_QUARTO
LEFT JOIN TIPO_QUARTO T3 ON T1.ID_TIPO_QUARTO = T3.ID_TIPO_QUARTO
WHERE T2.ID_QUARTO IS NULL;

-- FUNCIONARIO E SEU ENDERECO
CREATE VIEW IF NOT EXISTS VW_FUNCIONARIO_ENDERECO AS
SELECT 	T1.ID_FUNCIONARIO,
		T1.NU_CPF,
		T1.NO_FUNCIONARIO,
		T1.NU_TELEFONE,
		T1.NO_EMAIL,
		T1.ID_ENDERECO,
		T2.NU_CEP,
		T2.NO_ENDERECO,
		T2.NO_COMPLEMENTO,
		T2.NU_NUMERO
FROM FUNCIONARIO T1
LEFT JOIN ENDERECO T2 ON T1.ID_ENDERECO = T2.ID_ENDERECO;

-- HOSPEDE E SEU ENDERECO
CREATE VIEW IF NOT EXISTS VW_HOSPEDE_ENDERECO AS
SELECT 	T1.ID_HOSPEDE,
		T1.NU_CPF,
		T1.NO_HOSPEDE,
		T1.NU_TELEFONE,
		T1.NO_EMAIL,
		T1.ID_ENDERECO,
		T2.NU_CEP,
		T2.NO_ENDERECO,
		T2.NO_COMPLEMENTO,
		T2.NU_NUMERO
FROM HOSPEDE T1
LEFT JOIN ENDERECO T2 ON T1.ID_ENDERECO = T2.ID_ENDERECO;

-- HOSPEDAGEM COMPLETA
CREATE VIEW IF NOT EXISTS VW_HOSPEDAGEM_COMPLETA AS
SELECT 	T1.ID_HOSPEDAGEM,
		T2.ID_FUNCIONARIO,
		T2.NU_CPF NU_CPF_FUNCIONARIO,
		T2.NO_FUNCIONARIO,
		T3.ID_QUARTO,
		T3.NU_QUARTO,
		T9.ID_TIPO_QUARTO,
		T9.NO_TIPO_QUARTO,
		T9.VL_DIARIA,
		T4.ID_TIPO_PAGAMENTO,
		T4.NO_TIPO_PAGAMENTO,
		
		T1.ID_HOSPEDE_TITULAR,
		T5.NU_CPF NU_CPF_TITULAR,
		T5.NO_HOSPEDE NO_HOSPEDE_TITULAR,
		
		T1.ID_HOSPEDE_ACOMPANHANTE_1,
		T6.NU_CPF NU_CPF_ACOMPANHANTE_1,
		T6.NO_HOSPEDE NO_HOSPEDE_ACOMPANHANTE_1,
		
		T1.ID_HOSPEDE_ACOMPANHANTE_2,
		T7.NU_CPF NU_CPF_ACOMPANHANTE_2,
		T7.NO_HOSPEDE NO_HOSPEDE_ACOMPANHANTE_2,
		
		T1.ID_HOSPEDE_ACOMPANHANTE_3,
		T8.NU_CPF NU_CPF_ACOMPANHANTE_3,
		T8.NO_HOSPEDE NO_HOSPEDE_ACOMPANHANTE_3,
		
		T1.IN_ATIVO,
		T1.DT_ENTRADA,
		T1.NU_NOITE,
		T1.VL_HOSPEDAGEM
FROM HOSPEDAGEM T1
LEFT JOIN FUNCIONARIO T2 ON T1.ID_FUNCIONARIO = T2.ID_FUNCIONARIO
LEFT JOIN QUARTO T3 ON T1.ID_QUARTO = T3.ID_QUARTO
LEFT JOIN TIPO_PAGAMENTO T4 ON T1.ID_TIPO_PAGAMENTO = T4.ID_TIPO_PAGAMENTO
LEFT JOIN HOSPEDE T5 ON T1.ID_HOSPEDE_TITULAR = T5.ID_HOSPEDE
LEFT JOIN HOSPEDE T6 ON T1.ID_HOSPEDE_ACOMPANHANTE_1 = T6.ID_HOSPEDE
LEFT JOIN HOSPEDE T7 ON T1.ID_HOSPEDE_ACOMPANHANTE_2 = T7.ID_HOSPEDE
LEFT JOIN HOSPEDE T8 ON T1.ID_HOSPEDE_ACOMPANHANTE_3 = T8.ID_HOSPEDE
LEFT JOIN TIPO_QUARTO T9 ON T3.ID_TIPO_QUARTO = T9.ID_TIPO_QUARTO;

-- HOSPEDES QUE JÁ ESTÃO EM UMA HOSPEDAGEM (NÃO ESTÃO DISPONÍVEIS PARA NOVA HOSPEDAGEM)
CREATE VIEW IF NOT EXISTS VW_HOSPEDE_INDISPONIVEL_HOSPEDAGEM AS
WITH
	UNION_HOSPEDE_TITULAR AS (
		SELECT 	T1.ID_HOSPEDE_TITULAR ID_HOSPEDE,
				T1.NU_CPF_TITULAR NU_CPF,
				T1.NO_HOSPEDE_TITULAR NO_HOSPEDE,
				T1.IN_ATIVO
		FROM VW_HOSPEDAGEM_COMPLETA T1
	),
	UNION_HOSPEDE_ACOMPANHANTE_1 AS (
		SELECT 	T1.ID_HOSPEDE_ACOMPANHANTE_1 ID_HOSPEDE,
				T1.NU_CPF_ACOMPANHANTE_1 NU_CPF,
				T1.NO_HOSPEDE_ACOMPANHANTE_1 NO_HOSPEDE,
				T1.IN_ATIVO
		FROM VW_HOSPEDAGEM_COMPLETA T1
	),
	UNION_HOSPEDE_ACOMPANHANTE_2 AS (
		SELECT 	T1.ID_HOSPEDE_ACOMPANHANTE_2 ID_HOSPEDE,
				T1.NU_CPF_ACOMPANHANTE_2 NU_CPF,
				T1.NO_HOSPEDE_ACOMPANHANTE_2 NO_HOSPEDE,
				T1.IN_ATIVO
		FROM VW_HOSPEDAGEM_COMPLETA T1
	),
	UNION_HOSPEDE_ACOMPANHANTE_3 AS (
		SELECT 	T1.ID_HOSPEDE_ACOMPANHANTE_3 ID_HOSPEDE,
				T1.NU_CPF_ACOMPANHANTE_3 NU_CPF,
				T1.NO_HOSPEDE_ACOMPANHANTE_3 NO_HOSPEDE,
				T1.IN_ATIVO
		FROM VW_HOSPEDAGEM_COMPLETA T1
	),
	HOSPEDE_INDISPONIVEL AS (
		SELECT * FROM UNION_HOSPEDE_TITULAR
		UNION ALL
		SELECT * FROM UNION_HOSPEDE_ACOMPANHANTE_1
		UNION ALL
		SELECT * FROM UNION_HOSPEDE_ACOMPANHANTE_2
		UNION ALL
		SELECT * FROM UNION_HOSPEDE_ACOMPANHANTE_3
	)
SELECT DISTINCT *
FROM HOSPEDE_INDISPONIVEL T1
WHERE T1.IN_ATIVO = 1 AND T1.ID_HOSPEDE IS NOT NULL;

-- HOSPEDES QUE ESTÃO DISPONÍVEIS PARA NOVA HOSPEDAGEM
CREATE VIEW IF NOT EXISTS VW_HOSPEDE_DISPONIVEL_HOSPEDAGEM AS
SELECT DISTINCT T1.ID_HOSPEDE,
				T1.NU_CPF,
				T1.NO_HOSPEDE,
				0 IN_ATIVO
FROM HOSPEDE T1
LEFT JOIN VW_HOSPEDE_INDISPONIVEL_HOSPEDAGEM T2 ON T1.ID_HOSPEDE = T2.ID_HOSPEDE
WHERE T2.ID_HOSPEDE IS NULL;

-- HOSPEDAGEM TOTAL A RECEBER
CREATE VIEW IF NOT EXISTS VW_HOSPEDAGEM_TOTAL_A_RECEBER AS
SELECT SUM(VL_HOSPEDAGEM) TOTAL_A_RECEBER
FROM HOSPEDAGEM
WHERE IN_ATIVO = 1;

-- HOSPEDAGEM TOTAL RECEBIDO
CREATE VIEW IF NOT EXISTS VW_HOSPEDAGEM_TOTAL_RECEBIDO AS
SELECT SUM(VL_HOSPEDAGEM) TOTAL_RECEBIDO
FROM HOSPEDAGEM
WHERE IN_ATIVO = 0;

-- HOSPEDAGEM TOTAL DE ATIVOS
CREATE VIEW IF NOT EXISTS VW_HOSPEDAGEM_TOTAL_ATIVO AS
SELECT COUNT(VL_HOSPEDAGEM) TOTAL_ATIVO
FROM HOSPEDAGEM
WHERE IN_ATIVO = 1;

-- RANK DE FUNCIONÁRIOS
CREATE VIEW IF NOT EXISTS VW_RANK_FUNCIONARIO AS
SELECT 	T1.ID_FUNCIONARIO,
		T1.NU_CPF,
		T1.NO_FUNCIONARIO,
		(COUNT(T1.ID_FUNCIONARIO) - 1) QT_HOSPEDAGEM
FROM FUNCIONARIO T1
LEFT JOIN HOSPEDAGEM T2 ON T1.ID_FUNCIONARIO = T2.ID_FUNCIONARIO
GROUP BY T1.NO_FUNCIONARIO
ORDER BY QT_HOSPEDAGEM DESC;

-- RANK DE QUARTOS MAIS REQUISITADOS
CREATE VIEW IF NOT EXISTS VW_RANK_QUARTO AS
SELECT 	T1.ID_QUARTO,
		T1.NU_QUARTO,
		COUNT(T2.ID_QUARTO) QT_HOSPEDAGEM
FROM QUARTO T1
LEFT JOIN HOSPEDAGEM T2 ON T1.ID_QUARTO = T2.ID_QUARTO
GROUP BY T1.ID_QUARTO
ORDER BY QT_HOSPEDAGEM DESC;